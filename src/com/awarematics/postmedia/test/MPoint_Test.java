package com.awarematics.postmedia.test;

import java.io.IOException;

import com.awarematics.postmedia.io.MWKTReader;
import com.awarematics.postmedia.mgeom.MGeometryFactory;
import com.awarematics.postmedia.types.mediamodel.MPoint;


import org.locationtech.jts.geom.Coordinate;
//import org.postgresql.pljava.annotation.Function;
import org.locationtech.jts.geom.Geometry;
import org.locationtech.jts.geom.GeometryFactory;
import org.locationtech.jts.geom.Point;
import org.locationtech.jts.io.ParseException;
import org.locationtech.jts.io.WKTReader;

public class MPoint_Test {
	private static final double PI = 3.1415926535897932384626D;
	private static final double X_PI = 3.14159265358979324 * 3000.0 / 180.0D;
	private static final double SEMI_MAJOR = 6378245.0D;
	private static final double FLATTENING = 0.00669342162296594323D;

	public static void main(String[] args) throws IOException, ParseException, java.text.ParseException
	{		
		GeometryFactory geometryFactory2 = new GeometryFactory();
		WKTReader reader2 = new WKTReader(geometryFactory2);	  		  
		MGeometryFactory geometryFactory = new MGeometryFactory();
		MWKTReader reader = new MWKTReader(geometryFactory);	 	
		
		MPoint mp = (MPoint)reader.read("MPOINT ((13.27861 52.57814) 1180334807943, (13.27861 52.57814) 1180389003917)");
		Point p = (Point)reader2.read("POINT (13.4359 52.41721)");
		String time = "[1180389003919,1190477866060)";		
		Geometry geom = (Geometry)reader2.read("LINESTRING(13.58725 52.52363,13.58725 52.52355,13.58726 52.52334,13.58726 52.52309,13.58727 52.52284,13.58727 52.52259,13.58728 52.52234,13.58728 52.52209,13.58729 52.52184,13.58729 52.52178,13.58741 52.52154,13.5875 52.52134,13.58762 52.5211,13.58774 52.52086,13.58785 52.52062,13.588 52.52038,13.58808 52.52014,13.5882 52.5199,13.58831 52.51967,13.58843 52.51943,13.58846 52.51937,13.58851 52.5192,13.58858 52.519,13.58865 52.51871,13.58872 52.51846,13.58878 52.51822,13.58885 52.518,13.58892 52.51772,13.58893 52.51769,13.589 52.51762,13.589 52.51741,13.58908 52.51716,13.58914 52.517,13.5892 52.51673,13.58927 52.51648,13.58934 52.51624,13.58941 52.516,13.58948 52.51575,13.58948 52.51574,13.58969 52.51553,13.5899 52.51531,13.5901 52.5151,13.59031 52.51488,13.59051 52.51467,13.59072 52.51445,13.59079 52.51437,13.59071 52.51432,13.59047 52.51416,13.5902 52.514,13.58992 52.51379,13.58964 52.51361,13.58945 52.51348,13.58917 52.5133,13.58888 52.51312,13.58868 52.513,13.5884 52.51282,13.58816 52.51267,13.58775 52.51268,13.58734 52.51268,13.58694 52.51268,13.58682 52.51268,13.58647 52.5127,13.58606 52.51271,13.5857 52.51273,13.58531 52.51274,13.585 52.51275,13.58473 52.51258,13.58452 52.51244,13.58465 52.51232,13.58477 52.51219,13.58485 52.51212,13.58509 52.51211,13.58534 52.51211,13.58558 52.5121,13.58583 52.5121,13.58607 52.51209,13.58632 52.51209,13.58655 52.51208,13.58674 52.51208,13.587 52.51208,13.587 52.51207,13.58693 52.512,13.58676 52.51191,13.5866 52.5118,13.58643 52.51169,13.58627 52.51158,13.5861 52.51147,13.58594 52.51136,13.58578 52.51124,13.58561 52.51113,13.58545 52.511,13.58533 52.51094,13.58517 52.51084,13.585 52.51073,13.58484 52.51061,13.58468 52.5105,13.58451 52.51039,13.58435 52.51028,13.58418 52.51017,13.584 52.51006,13.58385 52.50995,13.58369 52.50984,13.58352 52.50973,13.58336 52.50961,13.58325 52.50954,13.58308 52.50943,13.58292 52.50932,13.58275 52.50921,13.58259 52.5091,13.58258 52.50909,13.58239 52.509,13.58219 52.50891,13.582 52.50882,13.5818 52.50873,13.5816 52.50865,13.58146 52.50858,13.58135 52.50862,13.58114 52.50868,13.58091 52.50874,13.58069 52.50881,13.58047 52.50887,13.58025 52.50893,13.58 52.509,13.57981 52.50906,13.57959 52.50912,13.57936 52.50919,13.57914 52.50925,13.57892 52.50932,13.5787 52.50938,13.57858 52.50942)");	
		Geometry traa = (Geometry)reader2.read("POINT(40 -73)");
		
		
		
		Geometry geo = (Geometry)reader2.read("MULTILINESTRING((-73.9917157777343 40.7424697420008,-73.9917113604713 40.7424677554897,-73.9917069432083 40.7424657689787,-73.9917025259454 40.7424637824676,-73.9916981086824 40.7424617959566,-73.9916936914194 40.7424598094455,-73.9916892741565 40.7424578229345,-73.9916848568935 40.7424558364234,-73.9916804396305 40.7424538499124,-73.9916760223675 40.7424518634013,-73.9916716051046 40.7424498768903,-73.991666198777 40.742447387465,-73.9916607924495 40.7424448980398,-73.9916553861219 40.7424424086146,-73.9916499797944 40.7424399191893,-73.9916445734668 40.7424374297641,-73.9916391671393 40.7424349403388,-73.9916337608118 40.7424324509136,-73.9916283544842 40.7424299614883,-73.9916229481567 40.7424274720631,-73.9916175418291 40.7424249826379,-73.9916094365287 40.7424222375646,-73.9916013312284 40.7424194924913,-73.991593225928 40.742416747418,-73.9915851206276 40.7424140023447,-73.9915770153273 40.7424112572714,-73.9915689100269 40.7424085121981,-73.9915608047265 40.7424057671248,-73.9915526994262 40.7424030220515,-73.9915445941258 40.7424002769783,-73.9915364888254 40.742397531905,-73.9915286182184 40.7423959812529,-73.9915207476113 40.7423944306008,-73.9915128770042 40.7423928799487,-73.9915050063971 40.7423913292966,-73.9914971357901 40.7423897786445,-73.991489265183 40.7423882279924,-73.9914813945759 40.7423866773404,-73.9914735239688 40.7423851266883,-73.9914656533617 40.7423835760362,-73.9914577827547 40.7423820253841,-73.9914495517258 40.7423780188344,-73.9914413206968 40.7423740122847,-73.9914330896679 40.742370005735,-73.991424858639 40.7423659991852,-73.9914166276101 40.7423619926355,-73.9914083965812 40.7423579860858,-73.9914001655523 40.7423539795361,-73.9913919345233 40.7423499729864,-73.9913837034944 40.7423459664367,-73.9913754724655 40.7423419598869,-73.991367551567 40.7423388669647,-73.9913596306685 40.7423357740424,-73.99135170977 40.7423326811201,-73.9913437888715 40.7423295881979,-73.991335867973 40.7423264952756,-73.9913279470745 40.7423234023533,-73.991320026176 40.7423203094311,-73.9913121052775 40.7423172165088,-73.991304184379 40.7423141235865,-73.9912962634805 40.7423110306642,-73.9912886359487 40.7423075479835,-73.9912810084168 40.7423040653027,-73.9912733808849 40.7423005826219,-73.991265753353 40.7422970999412,-73.9912581258211 40.7422936172604,-73.9912504982892 40.7422901345796,-73.9912428707573 40.7422866518989,-73.9912352432255 40.7422831692181,-73.9912276156936 40.7422796865373,-73.9912199881617 40.7422762038566,-73.9912100556064 40.7422720422416,-73.9912001230512 40.7422678806267,-73.9911901904959 40.7422637190118,-73.9911802579407 40.7422595573969,-73.9911703253854 40.7422553957819,-73.9911603928301 40.742251234167,-73.9911504602749 40.7422470725521,-73.9911405277196 40.7422429109372,-73.9911305951644 40.7422387493222,-73.9911206626091 40.7422345877073,-73.9911116017718 40.7422305685847,-73.9911025409344 40.7422265494622,-73.9910934800971 40.7422225303396,-73.9910844192598 40.742218511217,-73.9910753584225 40.7422144920945,-73.9910662975851 40.7422104729719,-73.9910572367478 40.7422064538493,-73.9910481759105 40.7422024347267,-73.9910391150731 40.7421984156042,-73.9910300542358 40.7421943964816,-73.991020079771 40.7421902893491,-73.9910101053063 40.7421861822165,-73.9910001308415 40.7421820750839,-73.9909901563767 40.7421779679514,-73.990980181912 40.7421738608188,-73.9909702074472 40.7421697536863,-73.9909602329824 40.7421656465537,-73.9909502585176 40.7421615394212,-73.9909402840529 40.7421574322886,"
				+ "-73.9909303095881 40.7421533251561),(-73.9898425061945 40.7417037617795,-73.9898371753041 40.7417014274194,-73.9898318444136 40.7416990930594,-73.9898265135232 40.7416967586994,-73.9898211826328 40.7416944243393,-73.9898158517424 40.7416920899793,-73.989810520852 40.7416897556193,-73.9898051899616 40.7416874212592,-73.9897998590711 40.7416850868992,-73.9897945281807 40.7416827525392,-73.9897891972903 40.7416804181791,-73.9897878058944 40.741679391396,-73.9897864144985 40.7416783646129,-73.9897850231025 40.7416773378297,-73.9897836317066 40.7416763110466,-73.9897822403107 40.7416752842634,-73.9897808489147 40.7416742574803,-73.9897794575188 40.7416732306972,-73.9897780661229 40.741672203914,-73.989776674727 40.7416711771309,-73.989775283331 40.7416701503477,-73.9897746882159 40.7416700749106,-73.9897740931008 40.7416699994735,-73.9897734979857 40.7416699240364,-73.9897729028705 40.7416698485992,-73.9897723077554 40.7416697731621,-73.9897717126403 40.741669697725,-73.9897711175252 40.7416696222878,-73.98977052241 40.7416695468507,-73.9897699272949 40.7416694714136,"
				+ "-73.9897693321798 40.7416693959765),(-73.9909303095881 40.7421533251561,-73.9909187928531 40.7421482624866,-73.9909072761182 40.742143199817,-73.9908957593832 40.7421381371475,-73.9908842426482 40.742133074478,-73.9908727259133 40.7421280118085,-73.9908612091783 40.742122949139,-73.9908496924434 40.7421178864695,-73.9908381757084 40.7421128237999,-73.9908266589735 40.7421077611304,-73.9908151422385 40.7421026984609,-73.9908052013013 40.7420983524441,-73.9907952603642 40.7420940064273,-73.990785319427 40.7420896604105,-73.9907753784899 40.7420853143937,-73.9907654375527 40.7420809683769,-73.9907554966155 40.7420766223601,-73.9907455556784 40.7420722763434,-73.9907356147412 40.7420679303266,-73.9907256738041 40.7420635843098,-73.9907157328669 40.742059238293,-73.9907045765538 40.7420542007692,-73.9906934202406 40.7420491632454,-73.9906822639275 40.7420441257215,-73.9906711076144 40.7420390881977,-73.9906599513013 40.7420340506739,-73.9906487949882 40.7420290131501,-73.990637638675 40.7420239756263,-73.9906264823619 40.7420189381025,-73.9906153260488 40.7420139005787,-73.9906041697357 40.7420088630549,-73.9905938348491 40.7420044038824,-73.9905834999625 40.7419999447099,-73.9905731650758 40.7419954855374,-73.9905628301892 40.741991026365,-73.9905524953026 40.7419865671925,-73.990542160416 40.74198210802,-73.9905318255294 40.7419776488475,-73.9905214906428 40.741973189675,-73.9905111557562 40.7419687305025,-73.9905008208696 40.74196427133,-73.9904907961134 40.7419605791017,-73.9904807713572 40.7419568868733,-73.990470746601 40.741953194645,-73.9904607218448 40.7419495024166,-73.9904506970886 40.7419458101883,-73.9904406723324 40.74194211796,-73.9904306475762 40.7419384257316,-73.99042062282 40.7419347335033,-73.9904105980638 40.7419310412749,-73.9904005733076 40.7419273490466,-73.9903885536585 40.7419229778841,-73.9903765340093 40.7419186067216,-73.9903645143602 40.7419142355591,-73.990352494711 40.7419098643965,-73.9903404750619 40.741905493234,-73.9903284554128 40.7419011220715,-73.9903164357636 40.741896750909,-73.9903044161145 40.7418923797465,-73.9902923964653 40.741888008584,-73.9902803768162 40.7418836374215,-73.9902678961623 40.7418787759177,-73.9902554155085 40.7418739144138,-73.9902429348547 40.74186905291,-73.9902304542009 40.7418641914062,-73.990217973547 40.7418593299023,-73.9902054928932 40.7418544683985,-73.9901930122394 40.7418496068946,-73.9901805315856 40.7418447453908,-73.9901680509318 40.741839883887,-73.9901555702779 40.7418350223831,-73.9901434835736 40.7418304710097,-73.9901313968692 40.7418259196363,-73.9901193101648 40.7418213682629,-73.9901072234604 40.7418168168894,-73.9900951367561 40.741812265516,-73.9900830500517 40.7418077141426,-73.9900709633473 40.7418031627692,-73.9900588766429 40.7417986113958,-73.9900467899386 40.7417940600223,-73.9900347032342 40.7417895086489,-73.9900232367907 40.7417844878889,-73.9900117703471 40.7417794671289,-73.9900003039036 40.7417744463689,-73.98998883746 40.7417694256089,-73.9899773710165 40.7417644048489,-73.989965904573 40.7417593840889,-73.9899544381294 40.7417543633289,-73.9899429716859 40.7417493425689,-73.9899315052424 40.7417443218089,-73.9899200387988 40.7417393010489,-73.9899122855384 40.741735747122,-73.9899045322779 40.741732193195,-73.9898967790175 40.7417286392681,-73.9898890257571 40.7417250853411,-73.9898812724966 40.7417215314142,-73.9898735192362 40.7417179774872,-73.9898657659758 40.7417144235603,-73.9898580127153 40.7417108696334,-73.9898502594549 40.7417073157064,"
				+ "-73.9898425061945 40.7417037617795))");
		
	
		for(int i =0;i<geo.getNumPoints();i++)
		{
			System.out.println(offset(geo.getCoordinates()[i].y, geo.getCoordinates()[i].x));
			geo.getCoordinates()[i] = new Coordinate();
			geo.getCoordinates()[i].x = offset(geo.getCoordinates()[i].y, geo.getCoordinates()[i].x).x;
			geo.getCoordinates()[i].y = offset(geo.getCoordinates()[i].y, geo.getCoordinates()[i].x).y;
		}
		for(int i =0;i<traa.getNumPoints();i++)
		{
			System.out.println(offset(traa.getCoordinates()[i].y, traa.getCoordinates()[i].x));
			geo.getCoordinates()[i] = new Coordinate();
			geo.getCoordinates()[i].x = offset(traa.getCoordinates()[i].y, traa.getCoordinates()[i].x).x;
			geo.getCoordinates()[i].y = offset(traa.getCoordinates()[i].y, traa.getCoordinates()[i].x).y;
		}
		
		System.out.println(geom.toText());

		System.out.println(geom.distance(traa));
		System.out.println(geom.intersects(traa));
	}
	
	
	public static String m_astext(MPoint mp) {	
		return mp.toGeoString();
	}	
	
	// 经度偏移量
	public static Coordinate offset(double lng, double lat) {
		Coordinate lngLat = new Coordinate();
		double dlng = transformLng(lng - 105.0, lat - 35.0);
		double dlat = transformLat(lng - 105.0, lat - 35.0);
		double radlat = lat / 180.0 * PI;
		double magic = Math.sin(radlat);
		magic = 1 - FLATTENING * magic * magic;
		double sqrtmagic = Math.sqrt(magic);
		dlng = (dlng * 180.0) / (SEMI_MAJOR / sqrtmagic * Math.cos(radlat) * PI);
		dlat = (dlat * 180.0) / ((SEMI_MAJOR * (1 - FLATTENING)) / (magic * sqrtmagic) * PI);
		lngLat.x = dlng;
		lngLat.y = dlat;
		return lngLat;
	}
		private static double transformLng(double lng, double lat) {
			double ret = 300.0 + lng + 2.0 * lat + 0.1 * lng * lng + 0.1 * lng * lat + 0.1 * Math.sqrt(Math.abs(lng));
			ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;
			ret += (20.0 * Math.sin(lng * PI) + 40.0 * Math.sin(lng / 3.0 * PI)) * 2.0 / 3.0;
			ret += (150.0 * Math.sin(lng / 12.0 * PI) + 300.0 * Math.sin(lng / 30.0 * PI)) * 2.0 / 3.0;
			return ret;
		}
		
		// 纬度偏移量
		private static double transformLat(double lng, double lat) {
			double ret = -100.0 + 2.0 * lng + 3.0 * lat + 0.2 * lat * lat + 0.1 * lng * lat
					+ 0.2 * Math.sqrt(Math.abs(lng));
			ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;
			ret += (20.0 * Math.sin(lat * PI) + 40.0 * Math.sin(lat / 3.0 * PI)) * 2.0 / 3.0;
			ret += (160.0 * Math.sin(lat / 12.0 * PI) + 320 * Math.sin(lat * PI / 30.0)) * 2.0 / 3.0;
			return ret;
		}
		
}